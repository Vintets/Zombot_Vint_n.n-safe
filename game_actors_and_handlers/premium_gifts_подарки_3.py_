# coding=utf-8
import logging
from game_state.base import BaseActor

logger = logging.getLogger(__name__)

class PremiumGifts(BaseActor):
    
    def perform_action(self):
        location_id = "main"    # на каком острове
        free_x = 95             # Координаты пустого места
        free_y = 5
        num = 300               # партиями по ... шт.
        specified_gift = 'VALENT_GIFT_BOX6' # зомбилетто
        #------------------------------------------
        """
        if self._get_options() == None: return
        specified_gift = self._get_options()[0]
        location_id = self._get_options()[1]
        free_x = self._get_options()[2]
        free_y = self._get_options()[3]
        min_money = self._get_options()[4] 
        """
        
        if self.if_location_pirate(): return
        name = self._get_item_reader().get(specified_gift).name
        xp = self._get_item_reader().get(specified_gift).xp
        if location_id == self._get_game_state().get_location_id():
            for object in self._get_game_location().get_game_objects():
                if object.item == '@'+specified_gift:
                    print specified_gift, ' ', object.id
                    open_event={"action":"pick","type":"item","objId":object.id}
                    self._get_events_sender().send_game_events([open_event])

            next_id = self.new_id()
            gifts = list(set(self._get_game_state().get_state().gifts))
            expa = 0
            s = 0
            for gift in gifts:
                if gift.item == '@'+specified_gift:
                    apply_event={"x":free_x,"y":free_y,"extraId":gift.id,"action":"applyCompGift","itemId":specified_gift,"type":"item","objId":next_id}
                    open_event={"action":"pick","type":"item","objId":next_id}
                    run = gift.count
                    s += 1
                    if num > run:
                        co = run
                    else:
                        co = num
                    track_events = []
                    for n in range(co):
                        track_events.append(apply_event)
                        track_events.append(open_event)
                    self._get_events_sender().send_game_events(track_events)
                    logger.info(u"Вскрываем %d шт. зомбилетто "% (co))
                    expa += co
                    run -= co
                    if co == run:
                        self._get_game_state().get_state().gifts.remove(gift)
                    else:
                        gift.count -= co
                    return
            
            if expa:        
                logger.info(u"  ------------------------------------  ")
                logger.info(u"Приняли и вскрыли %d шт. зомбилетто! Опыта: %s "% (expa,xp*expa))
                logger.info(u"  ------------------------------------  ")
            

     